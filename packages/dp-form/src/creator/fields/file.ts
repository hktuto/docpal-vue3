export const FileInputField = () => ({
    key:0,
    "type": "file-upload",
    "icon": "file-upload-field",
    "formItemFlag": true,
    "options": {
        "name": "costModelFile",
        "label": "costModelFile",
        "labelZh": "Cost Model File",
        "labelWidth": null,
        "labelHidden": false,
        "columnWidth": "200px",
        "disabled": false,
        "hidden": false,
        "required": false,
        "requiredHint": "",
        "customRule": "",
        "customRuleHint": "",
        "uploadURL": "/api/docpal/workflow/files/upload",
        "uploadTip": "",
        "withCredentials": true,
        "multipleSelect": false,
        "showFileList": true,
        "fileMaxSize": 1,
        "fileTypes": [],
        "customClass": [],
        "labelIconClass": null,
        "labelIconPosition": "rear",
        "labelTooltip": null,
        "onCreated": "",
        "onMounted": "",
        "onBeforeUpload": "",
        "onUploadSuccess": "",
        "onUploadError": "const tips = localStorage.getItem(\"v_form_locale\") === 'zh-CN' ? \"上传失败\" : \"Upload Failed\"\nconst message = JSON.parse(error.message).message\nthis.$message({\n  message: `${ tips }：${ message }`,\n  duration: 3000,\n  type: 'error'\n})",
        "onFileRemove": "const id = file.id || file.response[0].contentId\nif (!id) return\n$api.delete(`/docpal/workflow/task/attachment?attachmentId=${id}`,{baseURL: '/client'}).then(res => {\n  this.getFormRef().$emit('handleSave')\n}).catch(err => {\n})",
        "onValidate": "",
        limit: 1
    },
    "id": "fileupload63075"
})